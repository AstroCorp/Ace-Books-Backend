services:
  app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    networks:
      - main

  postgres:
    image: postgres:alpine
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DATABASES: ${DATABASE_NAME},${DATABASE_NAME}_test
      POSTGRES_PORT: ${DATABASE_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - main

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - main

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "9001:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    networks:
      - main

networks:
  main:
    driver: bridge

volumes:
  postgres_data:
    driver: "local"
  pgadmin_data:
    driver: "local"
